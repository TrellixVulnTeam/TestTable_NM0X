{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { DataRow } from '../../interfaces/data-row';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/table-data-service.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction TableComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"input\", 5);\n    i0.ɵɵlistener(\"input\", function TableComponent_div_2_Template_input_input_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const index_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.deleteRow($event, index_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelement(6, \"input\", 9);\n    i0.ɵɵelement(7, \"input\", 10);\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵelement(9, \"input\", 12);\n    i0.ɵɵelement(10, \"input\", 13);\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵelement(12, \"input\", 15);\n    i0.ɵɵelement(13, \"input\", 16);\n    i0.ɵɵelement(14, \"input\", 17);\n    i0.ɵɵelement(15, \"input\", 18);\n    i0.ɵɵelement(16, \"input\", 19);\n    i0.ɵɵelement(17, \"input\", 20);\n    i0.ɵɵelement(18, \"input\", 21);\n    i0.ɵɵelement(19, \"input\", 22);\n    i0.ɵɵelement(20, \"input\", 23);\n    i0.ɵɵelement(21, \"input\", 24);\n    i0.ɵɵelement(22, \"input\", 25);\n    i0.ɵɵelement(23, \"input\", 26);\n    i0.ɵɵelement(24, \"input\", 27);\n    i0.ɵɵelement(25, \"input\", 28);\n    i0.ɵɵelement(26, \"input\", 29);\n    i0.ɵɵelement(27, \"input\", 30);\n    i0.ɵɵelement(28, \"input\", 31);\n    i0.ɵɵelement(29, \"input\", 32);\n    i0.ɵɵelement(30, \"input\", 33);\n    i0.ɵɵelement(31, \"input\", 34);\n    i0.ɵɵelement(32, \"input\", 35);\n    i0.ɵɵelement(33, \"input\", 36);\n    i0.ɵɵelement(34, \"input\", 37);\n    i0.ɵɵelement(35, \"input\", 38);\n    i0.ɵɵelement(36, \"input\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const formGroup_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", formGroup_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", index_r2 + 1);\n  }\n}\n\nexport let TableComponent = /*#__PURE__*/(() => {\n  class TableComponent {\n    constructor(fb, tableDataService) {\n      this.fb = fb;\n      this.tableDataService = tableDataService;\n      this._dataArray = [];\n      this.tableFormgroupArray = [];\n      this.subscribersArray = [];\n      this.tableChangedEvent = new EventEmitter();\n    }\n\n    set dataArray(value) {\n      this._dataArray = value;\n      this.createArrayFormGroup();\n    }\n\n    get dataArray() {\n      return this._dataArray;\n    }\n\n    createArrayFormGroup() {\n      this.tableFormgroupArray = [];\n\n      this._dataArray.forEach((el, index) => {\n        this.addTableRow(el, index);\n      });\n    }\n\n    addTableRow(element = new DataRow(), index = this.tableFormgroupArray.length) {\n      const formGroup = this.fb.group(element);\n      this.tableFormgroupArray.push(formGroup);\n      const formGroupSubscription = formGroup.valueChanges.subscribe(value => {\n        this.getOutPutData(value, index);\n      });\n      this.subscribersArray.push(formGroupSubscription);\n    }\n\n    getOutPutData(changedRow, index) {\n      if (changedRow) {\n        this._dataArray[index] = changedRow;\n      } else {\n        this._dataArray.splice(index, 1);\n\n        this.tableFormgroupArray.splice(index, 1);\n      }\n\n      this.tableChangedEvent.emit(this._dataArray);\n    }\n\n    deleteRow(event, index) {\n      if (event.inputType === 'deleteContentBackward') {\n        this.getOutPutData(null, index);\n      } else {\n        event.target.value = index + 1;\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscribersArray.forEach(subscriber => {\n        subscriber.unsubscribe();\n      });\n    }\n\n  }\n\n  TableComponent.ɵfac = function TableComponent_Factory(t) {\n    return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TableDataService));\n  };\n\n  TableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TableComponent,\n    selectors: [[\"app-table\"]],\n    inputs: {\n      dataArray: \"dataArray\"\n    },\n    outputs: {\n      tableChangedEvent: \"tableChangedEvent\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"table-main\"], [\"class\", \"table-container\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"table-container\"], [1, \"table-row\", 3, \"formGroup\"], [3, \"value\", \"input\"], [\"formControlName\", \"healthIndex\"], [\"formControlName\", \"endDate\"], [\"formControlName\", \"minValueDateTime\"], [\"formControlName\", \"type\"], [\"formControlName\", \"cowId\"], [\"formControlName\", \"animalId\"], [\"formControlName\", \"eventId\"], [\"formControlName\", \"deletable\"], [\"formControlName\", \"lactationNumber\"], [\"formControlName\", \"daysInLactation\"], [\"formControlName\", \"ageInDays\"], [\"formControlName\", \"startDateTime\"], [\"formControlName\", \"reportingDateTime\"], [\"formControlName\", \"alertType\"], [\"formControlName\", \"duration\"], [\"formControlName\", \"originalStartDateTime\"], [\"formControlName\", \"endDateTime\"], [\"formControlName\", \"daysInPregnancy\"], [\"formControlName\", \"heatIndexPeak\"], [\"formControlName\", \"newGroupId\"], [\"formControlName\", \"newGroupName\"], [\"formControlName\", \"currentGroupId\"], [\"formControlName\", \"currentGroupName\"], [\"formControlName\", \"destinationGroup\"], [\"formControlName\", \"destinationGroupName\"], [\"formControlName\", \"calvingEase\"], [\"formControlName\", \"oldLactationNumber\"], [\"formControlName\", \"newborns\"], [\"formControlName\", \"cowEntryStatus\"], [\"formControlName\", \"birthDateCalculated\"], [\"formControlName\", \"sire\"], [\"formControlName\", \"breedingNumber\"], [\"formControlName\", \"isOutOfBreedingWindow\"], [\"formControlName\", \"interval\"]],\n    template: function TableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵtemplate(2, TableComponent_div_2_Template, 37, 2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function TableComponent_Template_button_click_3_listener() {\n          return ctx.addTableRow();\n        });\n        i0.ɵɵtext(4, \" Add+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tableFormgroupArray);\n      }\n    },\n    directives: [i3.NgForOf, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\".table-main[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%]{display:grid;grid-auto-flow:column;grid-auto-columns:minmax(100px,1fr)}.table-main[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;border:.5px solid black}.table-main[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   .table-row[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover{border:.5px solid red;cursor:pointer}\"]\n  });\n  return TableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}